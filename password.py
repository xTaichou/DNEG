"""
This is a password generator script that works as follows:
It allows the user to enter a word or phrase and the length they would like for the password.

If it is over 20 characters then it will ask if they are sure as long passwords aren't memorable unless stored.

If they do not provide a word or phrase it will choose a random word using an API call.
If no length is provided it will choose a random length between 8 and 20.

The most random passwords will be generated by leaving both blank otherwise the only variability comes from the numbers
added to the words.
"""
import random
import json
from random_word import RandomWords
import yaml
import requests


def substitue(word):
    """
    Just substitutes letters for similar numbers or symbols.
    :param word: the word that will have its letters replaced
    :return: the word with the replaced letters
    """
    word = word.replace("o", "0")
    word = word.replace("a", "@")
    word = word.replace("i", "!")
    word = word.replace("e", "3")

    return word

def randPass(length):
    """
    This will generate a random password from scratch by making use of an API to get a random word and then uses the
    other functions to change them.
    :param length: the length of the password
    :return: the password of the given length
    """
    r = RandomWords()
    # Return a single random word
    word = r.get_random_word()
    word = addNumbers(word, length)
    return word

def addNumbers(word, length):
    """
    This will add nubers to end of each word if it is a phrase or single word. The number of characters depends on the
    length of the password and then will either append missing to end of a single word or append to end of each word in
    the phrase.

    For ease of execution this makes use of the substitution function to build the password.
    :param word: the word or phrase
    :param length: length of the password
    :return: the words with the numbers appended.
    """
    words = word.split(" ")
    password = ""

    if len(words) == 1:
        if len(word) < length:
            word = substitue(word) + str(random.randrange(0, 10000000000000000))[:length - len(word)]
        password = word
    else:
        if len(word) < length:
            for x in words:
                x = substitue(x) + str(random.randrange(0, 10000000000000000))[:int((length / len(words) - len(x)))]
                password += x + " "
        else:
            for x in words:
                password += substitue(x) + " "

    return password

def generatePassword(word, length):
    """
    This is thr base function that checks the length and if the word/phrase was left blank to decide what happens next.
    :param word: word/phrase if applicable
    :param length: length of the password if given
    :return: the password
    """
    words = word.split(" ")
    password = ""

    if length == 0:
        length = random.randrange(8, 20)

    if word == "":
        password = randPass(length)
    else:
        password = addNumbers(word, length)

    return password


print("The program will generate a random password based of the following criteria:\nIf you leave the word/phrase empty"
      " it will generate a random password of the specified length. If you leave the length empty it will generate a "
      "length between 8-20.\nIf it is a phrase it must be separated by spaces.\n"
      "    If the phrase is longer than the length then it will not be shortened.\n\nBy default it will "
      "use special characters and randomly make some characters uppercase. To leave selection blank just press enter\n")
words = input("Enter a word or phrase (leave blank for random): ")

while True:  # this while will check that the length is a number and less than 20 or ask for confirmation
    pLength = input("Length of password: ")
    if pLength == "":
        pLength = 0
        break

    try:
        pLength = int(pLength)
        if pLength > 20:
            answer = input("Are you sure? (y/n)")
            if answer.lower() == "y":
                break
        else:
            break
        continue
    except:
        print("Please enter a number")

print("Password: ", generatePassword(words, pLength))

